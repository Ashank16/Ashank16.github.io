{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderLeader","tag","left","middle","object","body","heading","About","leaders","map","to","active","title","list","RenderMenuItem","id","width","Menu","menu","dishes","key","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","Fragment","outline","onClick","isOpen","toggle","RenderDish","RenderComments","comments","com","co","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","console","log","firstname","lastname","telnum","email","agree","contactType","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c67de0e8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n        <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );    \r\n    }\r\n        \r\n    else {\r\n        return(\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'    \r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                                isLoading={props.dishesLoading}\r\n                                errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                                isLoading={props.promosLoading}\r\n                                errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}  \r\n                                isLoading={props.leadersLoading}\r\n                                errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n    return(\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">                                               \r\n                <Media heading>{leader.name}</Media>\r\n                <p>{leader.designation}</p>\r\n                <p>{leader.description}</p> \r\n            </Media>\r\n        </Media>        \r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n    \r\n    if (props.leaders.isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    \r\n    else if (props.leaders.errMess) {\r\n        return (\r\n            <h4>{props.leaders.errMess}</h4>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <Stagger in>\r\n                        <div className=\"col-12\">\r\n                            <Fade in>\r\n                                <Media list>\r\n                                    {leaders}\r\n                                </Media>\r\n                            </Fade>\r\n                        </div>\r\n                    </Stagger>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;    \r\n","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({dish}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>                                               \r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>            \r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        else {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    \r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form'; \r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail= (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(values) {;\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://www.skype.com/en/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                        placeholder=\"First Name\" \r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3),\r\n                                            maxLength: maxLength(15)  \r\n                                        }} \r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\" \r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                        placeholder=\"Last Name\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3),\r\n                                            maxLength: maxLength(15)  \r\n                                        }} \r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\" \r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row> \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                        placeholder=\"Tel. Number\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(8),\r\n                                            maxLength: maxLength(10), isNumber \r\n                                        }} \r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\" \r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 7 digits',\r\n                                            maxLength: 'Must be 10 digits or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>   \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                        placeholder=\"Email\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail  \r\n                                        }} \r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\" \r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row> \r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\" /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row> \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                        rows=\"12\" \r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row> \r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row> \r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport {Card,CardImg,CardText,CardTitle,CardBody,Breadcrumb,BreadcrumbItem,Button,Modal,ModalHeader,\r\n        ModalBody,Label,Col,Row} from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });     \r\n    }\r\n    \r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"col-12\">\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\" className=\"col-12\">Rating</Label>\r\n                                    <Col>\r\n                                        <Control.select model=\".rating\" name=\"rating\"\r\n                                            className=\"form-control\" >\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\" className=\"col-12\">Your Name</Label>\r\n                                    <Col>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                            placeholder=\"Your Name\" \r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3),\r\n                                                maxLength: maxLength(15)  \r\n                                            }} \r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\" \r\n                                            model=\".author\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row> \r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\" className=\"col-12\">Comment</Label>\r\n                                    <Col>\r\n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \r\n                                            rows=\"6\" \r\n                                            className=\"form-control\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col >\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm> \r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>  \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n    const DishDetail = (props) => {  \r\n        if (props.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) {\r\n            return ( \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} comments={props.comments} \r\n                        postComment={props.postComment} dishId={props.dish.id} />\r\n                    </div>\r\n                </div>    \r\n            );\r\n        }\r\n    }\r\n    \r\n\r\n    function RenderDish(props) { \r\n        \r\n        if (props.dish!=null) {        \r\n            return (\r\n            <React.Fragment>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FadeTransform in \r\n                        transformProps={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'    \r\n                        }}>\r\n                        <Card>\r\n                            <CardImg width=\"100%\" src={baseUrl + props.dish.image} alt={props.dish.name} />\r\n                            <CardBody>\r\n                                <CardTitle>{props.dish.name}</CardTitle>\r\n                                <CardText>{props.dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </FadeTransform>\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <RenderComments comments={props.comments} postComment={props.postComment}\r\n                                    dishId={props.dish.id} />\r\n                </div>\r\n            </React.Fragment>\r\n            );\r\n        }\r\n        else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}) {   \r\n\r\n        if (comments!=null) {        \r\n            const com = comments.map( (co) => {\r\n                return(\r\n                    <React.Fragment>\r\n                        <div>\r\n                            <Fade in>                                     \r\n                                <li>{co.comment}</li><br />\r\n                                <li>-- {co.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(co.date)))}</li><br /> \r\n                            </Fade>\r\n                        </div>  \r\n                    </React.Fragment>\r\n                );\r\n            }\r\n            );\r\n            return(\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>                                          \r\n                        {com}\r\n                        <CommentForm dishId={dishId} postComment={postComment} />\r\n                    </Stagger>  \r\n                </ul>\r\n\r\n            )\r\n        }\r\n        else{\r\n            return(<div></div>);\r\n        }\r\n    }\r\n    \r\nexport default DishDetail;\r\n","import React, { Component } from 'react';\r\nimport { Navbar,NavbarBrand,Nav,NavbarToggler,Collapse,NavItem,Jumbotron,Button,Modal,ModalHeader,\r\n        ModalBody,Form,FormGroup,Input,Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n    \r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    \r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });     \r\n    }\r\n    \r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username : \" + this.username.value + \" Password : \" + this.password.value + \r\n              \" Remember : \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <React.Fragment>                                                         \r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" \r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>   \r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>            \r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>      \r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" \r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" \r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>                                        \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    \r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST', \r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        //Error Handler\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post comments ', error.message);\r\n        alert('Your comment could not be posted\\nError: ' + error.message); });\r\n}\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) =>(dispatch) => {\r\n    \r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST', \r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        //Error Handler\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => alert(JSON.stringify(response)))\r\n    .catch(error => { console.log('Post feedback ', error.message);\r\n        alert('Your feedback could not be received\\nError: ' + error.message); });\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    \r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        //Error Handler\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess    \r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        //Error Handler\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess    \r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n    \r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        //Error Handler\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess    \r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n    \r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        //Error Handler\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess    \r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect , withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author,                                                                            comment)),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchDishes: () => {dispatch(fetchDishes())},\r\n    resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => {dispatch(fetchComments())},\r\n    fetchPromos: () => {dispatch(fetchPromos())},\r\n    fetchLeaders: () => {dispatch(fetchLeaders())}\r\n\r\n});\r\n\r\nclass Main extends Component{\r\n    \r\n    componentDidMount() {                      //after the view is mounted this function will be called\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n \r\n    render() {\r\n        \r\n        const HomePage = () => {\r\n            return(\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]} \r\n                    //dishes is written 2 times above as 1st dishes is for dishes in ActionCreators and then 2nd dish is for actual dish present there\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promosLoading={this.props.promotions.isLoading}\r\n                    promosErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n        \r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => \r\n                        dish.id === parseInt(match.params.dishId,10))[0]} \r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => \r\n                        comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />                \r\n            );\r\n        }\r\n    \r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );    \r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}; \r\n            \r\n        case ActionTypes.DISHES_LOADING: \r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n            \r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}; \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n            \r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload}; \r\n            \r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload}; \r\n            \r\n        case ActionTypes.PROMOS_LOADING: \r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n            \r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}; \r\n            \r\n        case ActionTypes.LEADERS_LOADING: \r\n            return {...state, isLoading: true, errMess: null, leaders: []};\r\n            \r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}; \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}\r\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component{    \n    \n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );    \n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}